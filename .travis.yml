language: node_js
node_js:
  - 13

services:
  - docker

# Pre-testing installs
install:
  - echo "nothing needs to be installed"

# Scripts to be run such as tests
before_script:
  - echo "no tests"

script:
  - docker --version # print the version for logging
  - docker build -t udagram-api-feed ./udagram-api-feed
  - docker build -t udagram-api-user ./udagram-api-user
  - docker build -t udagram-frontend ./udagram-frontend
  - docker build -t udagram-reverseproxy ./udagram-reverseproxy

#Tagging 
  - docker tag udagram-api-feed kellyobende/udagram-api-feed:v3a
  - docker tag udagram-api-user kellyobende/udagram-api-user:v3a
  - docker tag udagram-frontend kellyobende/udagram-frontend:local
  - docker tag udagram-reverseproxy kellyobende/reverseproxy:v3a
# Tasks to perform after the process is successful. Formatting the Docker username and password as below enables you to programmatically log in without having the password exposed in logs.
after_success:
  - echo "$DOCKER_PASSWORD" | docker login -u "$DOCKER_USERNAME" --password-stdin
  - docker push kellyobende/udagram-api-feed:v3a
  - docker push kellyobende/udagram-api-user:v3a
  - docker push kellyobende/udagram-frontend:local
  - docker push kellyobende/reverseproxy:v3a

What about this code? echo "$DOCKER_PASSWORD"

Don't worry if it isn't clear yet. $DOCKER_PASSWORD and $DOCKER_USERNAME are environment variables. We'll learn more about them soon!

Travis CI serves as the _Continuous Integration_ component of our pipeline.
Travis CI serves as the Continuous Integration component of our pipeline.

New Term
Term	Definition
YAML	Yet another markup language a common way to programmatically write configurations. Sometimes referred to as YML.
Additional Reading
For more details about Travis CI functionality:

Travis CI Features
;